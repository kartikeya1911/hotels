<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Dashboard - LuxeStay Hotels</title>
        <link rel="stylesheet" href="/css/style.css" />
        <link rel="stylesheet" href="/css/components.css" />
        <link rel="stylesheet" href="/css/footer.css" />
        <link rel="stylesheet" href="/css/dashboard.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
        <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    </head>
    <body>
        <%- include('partials/nav') %>

        <main class="dashboard-container">
            <div class="dashboard-header" data-aos="fade-down">
                <div class="welcome-section">
                    <h1>Welcome back, <span id="userName">Guest</span>!</h1>
                    <p>Here's what's happening with your account</p>
                </div>
                <div class="user-info">
                    <div class="user-avatar" id="userAvatar"><%= user.firstName.charAt(0) %></div>
                    <div class="user-details">
                        <h3 id="userFullName"><%= user.firstName %> <%= user.lastName %></h3>
                        <p id="userEmail"><%= user.email %></p>
                    </div>
                </div>
            </div>

            <div class="dashboard-grid">
                <div class="dashboard-card" data-aos="fade-up" data-aos-delay="100">
                    <div class="card-header">
                        <div class="card-icon bookings">
                            <i class="fas fa-calendar-check"></i>
                        </div>
                        <h3 class="card-title">Your Bookings</h3>
                    </div>
                    <p class="card-content">View and manage your current and upcoming hotel bookings.</p>
                    <div class="card-actions">
                        <a href="/bookings" class="card-btn primary">
                            <i class="fas fa-eye"></i>
                            View Bookings
                        </a>
                        <a href="/hotels" class="card-btn secondary">
                            <i class="fas fa-plus"></i>
                            New Booking
                        </a>
                    </div>
                </div>

                <div class="dashboard-card" data-aos="fade-up" data-aos-delay="200">
                    <div class="card-header">
                        <div class="card-icon profile">
                            <i class="fas fa-user"></i>
                        </div>
                        <h3 class="card-title">Profile Settings</h3>
                    </div>
                    <p class="card-content">Update your personal information and account settings.</p>
                    <div class="card-actions">
                        <a href="/dashboard" class="card-btn primary">
                            <i class="fas fa-edit"></i>
                            Edit Profile
                        </a>
                        <a href="/portfolio" class="card-btn secondary">
                            <i class="fas fa-briefcase"></i>
                            View Portfolio
                        </a>
                    </div>
                </div>

                <div class="dashboard-card" data-aos="fade-up" data-aos-delay="300">
                    <div class="card-header">
                        <div class="card-icon preferences">
                            <i class="fas fa-star"></i>
                        </div>
                        <h3 class="card-title">Preferences</h3>
                    </div>
                    <p class="card-content">Customize your hotel preferences and notification settings.</p>
                    <div class="card-actions">
                        <a href="/preferences" class="card-btn primary">
                            <i class="fas fa-sliders-h"></i>
                            Manage Preferences
                        </a>
                        <a href="/notifications" class="card-btn secondary">
                            <i class="fas fa-bell"></i>
                            Notifications
                        </a>
                    </div>
                </div>
            </div>

            <div class="recent-activity" data-aos="fade-up" data-aos-delay="400">
                <h2 class="section-title">
                    <i class="fas fa-history"></i>
                    Recent Activity
                </h2>
                <div class="activity-list" id="activityList">
                    <!-- Activity items will be populated dynamically -->
                </div>
            </div>

            <div class="dashboard-content">
                <div class="bookings-section">
                    <h2>Your Bookings</h2>
                    <div id="bookings-list" class="bookings-grid">
                        <!-- Bookings will be loaded here -->
                    </div>
                </div>
            </div>
        </main>

        <%- include('partials/footer') %>

        <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
        <script>
            // Initialize AOS
            AOS.init({
                duration: 800,
                offset: 100,
                once: true
            });

            // Check if user is logged in and fetch user data
            document.addEventListener('DOMContentLoaded', function() {
                fetchUserData();
                loadBookings();
            });
            
            // Function to fetch user data
            async function fetchUserData() {
                try {
                    const response = await fetch('/api/user/profile');
                    
                    if (response.ok) {
                        const userData = await response.json();
                        
                        // Update UI with user data
                        document.getElementById('userName').textContent = userData.firstName;
                        document.getElementById('userFullName').textContent = `${userData.firstName} ${userData.lastName}`;
                        document.getElementById('userEmail').textContent = userData.email;
                        document.getElementById('userAvatar').textContent = userData.firstName.charAt(0);

                        // Update recent activity
                        updateRecentActivity(userData.recentActivity);
                    } else if (response.status === 401) {
                        // Only redirect to login if we get a 401 Unauthorized response
                        window.location.href = '/login';
                    } else {
                        console.error('Failed to fetch user data');
                        showNotification('Failed to load user data', 'error');
                    }
                } catch (error) {
                    console.error('Error fetching user data:', error);
                    showNotification('Error loading user data', 'error');
                }
            }

            // Function to update recent activity
            function updateRecentActivity(activities) {
                const activityList = document.getElementById('activityList');
                activityList.innerHTML = ''; // Clear existing activities

                if (!activities || activities.length === 0) {
                    activityList.innerHTML = `
                        <div class="activity-item">
                            <div class="activity-details">
                                <div class="activity-title">No recent activity</div>
                            </div>
                        </div>
                    `;
                    return;
                }

                activities.forEach(activity => {
                    const activityItem = document.createElement('div');
                    activityItem.className = 'activity-item';
                    activityItem.innerHTML = `
                        <div class="activity-icon ${activity.type}">
                            <i class="fas ${getActivityIcon(activity.type)}"></i>
                        </div>
                        <div class="activity-details">
                            <div class="activity-title">${activity.title}</div>
                            <div class="activity-time">${formatTimeAgo(activity.timestamp)}</div>
                        </div>
                    `;
                    activityList.appendChild(activityItem);
                });
            }

            // Helper function to get activity icon
            function getActivityIcon(type) {
                const icons = {
                    booking: 'fa-calendar-check',
                    profile: 'fa-user-edit',
                    preference: 'fa-star',
                    review: 'fa-comment',
                    default: 'fa-info-circle'
                };
                return icons[type] || icons.default;
            }

            // Helper function to format time ago
            function formatTimeAgo(timestamp) {
                const date = new Date(timestamp);
                const now = new Date();
                const seconds = Math.floor((now - date) / 1000);

                if (seconds < 60) return 'Just now';
                if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;
                if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;
                if (seconds < 604800) return `${Math.floor(seconds / 86400)} days ago`;
                return date.toLocaleDateString();
            }

            // Function to show notifications
            function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.textContent = message;
                
                document.body.appendChild(notification);
                
                // Remove notification after 3 seconds
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }

            document.addEventListener('DOMContentLoaded', function() {
                loadBookings();
            });

            async function loadBookings() {
                try {
                    const response = await fetch('/api/bookings');
                    const data = await response.json();

                    if (data.success) {
                        const bookingsList = document.getElementById('bookings-list');
                        
                        if (data.bookings.length === 0) {
                            bookingsList.innerHTML = '<p class="no-bookings">You have no bookings yet.</p>';
                            return;
                        }

                        bookingsList.innerHTML = data.bookings.map(booking => `
                            <div class="booking-card">
                                <div class="booking-header">
                                    <h3>${booking.hotelName}</h3>
                                    <span class="booking-status ${booking.status}">${booking.status}</span>
                                </div>
                                <div class="booking-details">
                                    <p><strong>Room:</strong> ${booking.roomType}</p>
                                    <p><strong>Check-in:</strong> ${new Date(booking.checkIn).toLocaleDateString()}</p>
                                    <p><strong>Check-out:</strong> ${new Date(booking.checkOut).toLocaleDateString()}</p>
                                    <p><strong>Guests:</strong> ${booking.guests}</p>
                                    <p><strong>Total Price:</strong> $${booking.totalPrice}</p>
                                    <p><strong>Booked on:</strong> ${new Date(booking.createdAt).toLocaleDateString()}</p>
                                </div>
                            </div>
                        `).join('');
                    } else {
                        console.error('Error loading bookings:', data.message);
                    }
                } catch (error) {
                    console.error('Error loading bookings:', error);
                }
            }
        </script>

        <style>
        .bookings-section {
            padding: 2rem;
        }

        .bookings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 1rem;
        }

        .booking-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 1.5rem;
        }

        .booking-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .booking-header h3 {
            margin: 0;
            color: #333;
        }

        .booking-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .booking-status.confirmed {
            background: #e6f4ea;
            color: #1e7e34;
        }

        .booking-status.cancelled {
            background: #fbe9e7;
            color: #d32f2f;
        }

        .booking-details {
            color: #666;
        }

        .booking-details p {
            margin: 0.5rem 0;
        }

        .no-bookings {
            text-align: center;
            color: #666;
            padding: 2rem;
            grid-column: 1 / -1;
        }
        </style>
    </body>
</html>