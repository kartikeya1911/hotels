<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Your Bookings - LuxeStay Hotels</title>
        <link rel="stylesheet" href="/css/style.css" />
        <link rel="stylesheet" href="/css/components.css" />
        <link rel="stylesheet" href="/css/footer.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
        <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
        <style>
            .bookings-container {
                max-width: 1200px;
                margin: 0 auto;
                padding: 2rem;
            }

            .bookings-header {
                margin-bottom: 2rem;
                text-align: center;
            }

            .bookings-header h1 {
                font-size: 2.5rem;
                color: #333;
                margin-bottom: 1rem;
            }

            .bookings-header p {
                color: #666;
                font-size: 1.1rem;
            }

            .bookings-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
                gap: 2rem;
            }

            .booking-card {
                background: white;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                overflow: hidden;
                transition: transform 0.3s ease;
            }

            .booking-card:hover {
                transform: translateY(-5px);
            }

            .booking-image {
                height: 200px;
                overflow: hidden;
            }

            .booking-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .booking-content {
                padding: 1.5rem;
            }

            .booking-header {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                margin-bottom: 1rem;
            }

            .booking-title h3 {
                margin: 0;
                color: #333;
                font-size: 1.2rem;
            }

            .booking-status {
                padding: 0.25rem 0.75rem;
                border-radius: 20px;
                font-size: 0.875rem;
                font-weight: 500;
            }

            .booking-status.confirmed {
                background: #e6f4ea;
                color: #1e7e34;
            }

            .booking-details {
                color: #666;
            }

            .booking-details p {
                margin: 0.5rem 0;
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

            .booking-details i {
                color: #3498db;
                width: 20px;
            }

            .booking-actions {
                margin-top: 1.5rem;
                display: flex;
                gap: 1rem;
            }

            .btn {
                padding: 0.75rem 1.5rem;
                border: none;
                border-radius: 5px;
                font-weight: 500;
                cursor: pointer;
                display: flex;
                align-items: center;
                gap: 0.5rem;
                transition: all 0.3s ease;
            }

            .btn-primary {
                background: #3498db;
                color: white;
            }

            .btn-primary:hover {
                background: #2980b9;
            }

            .btn-secondary {
                background: #f8f9fa;
                color: #333;
            }

            .btn-secondary:hover {
                background: #e9ecef;
            }

            .no-bookings {
                text-align: center;
                padding: 3rem;
                color: #666;
                grid-column: 1 / -1;
            }

            .filter-section {
                margin-bottom: 2rem;
                display: flex;
                justify-content: center;
                gap: 1rem;
            }

            .filter-btn {
                padding: 0.5rem 1rem;
                border: 1px solid #ddd;
                border-radius: 5px;
                background: white;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .filter-btn.active {
                background: #3498db;
                color: white;
                border-color: #3498db;
            }
        </style>
    </head>
    <body>
        <%- include('partials/nav') %>

        <main class="bookings-container">
            <div class="bookings-header" data-aos="fade-down">
                <h1>Your Bookings</h1>
                <p>View and manage your hotel reservations</p>
            </div>

            <div class="filter-section" data-aos="fade-up">
                <button class="filter-btn active" data-filter="all">All Bookings</button>
                <button class="filter-btn" data-filter="confirmed">Confirmed</button>
                <button class="filter-btn" data-filter="upcoming">Upcoming</button>
                <button class="filter-btn" data-filter="past">Past</button>
            </div>

            <div id="bookings-list" class="bookings-grid" data-aos="fade-up" data-aos-delay="100">
                <!-- Bookings will be loaded here -->
            </div>
        </main>

        <%- include('partials/footer') %>

        <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
        <script>
            // Initialize AOS
            AOS.init({
                duration: 800,
                offset: 100,
                once: true
            });

            // Load bookings when page loads
            document.addEventListener('DOMContentLoaded', function() {
                loadBookings();
                setupFilterButtons();
            });

            // Function to load bookings
            async function loadBookings() {
                try {
                    const response = await fetch('/api/bookings');
                    const data = await response.json();

                    if (data.success) {
                        const bookingsList = document.getElementById('bookings-list');
                        
                        if (data.bookings.length === 0) {
                            bookingsList.innerHTML = `
                                <div class="no-bookings">
                                    <i class="fas fa-calendar-times fa-3x" style="color: #ddd; margin-bottom: 1rem;"></i>
                                    <h3>No Bookings Found</h3>
                                    <p>You haven't made any bookings yet.</p>
                                    <a href="/hotels" class="btn btn-primary" style="margin-top: 1rem;">
                                        <i class="fas fa-search"></i> Find Hotels
                                    </a>
                                </div>
                            `;
                            return;
                        }

                        bookingsList.innerHTML = data.bookings.map(booking => `
                            <div class="booking-card" data-status="${booking.status}" data-date="${booking.checkIn}">
                                <div class="booking-content">
                                    <div class="booking-header">
                                        <div class="booking-title">
                                            <h3>${booking.hotelName}</h3>
                                        </div>
                                        <span class="booking-status ${booking.status}">${booking.status}</span>
                                    </div>
                                    <div class="booking-details">
                                        <p><i class="fas fa-bed"></i> ${booking.roomType}</p>
                                        <p><i class="fas fa-calendar-check"></i> Check-in: ${new Date(booking.checkIn).toLocaleDateString()}</p>
                                        <p><i class="fas fa-calendar-times"></i> Check-out: ${new Date(booking.checkOut).toLocaleDateString()}</p>
                                        <p><i class="fas fa-user-friends"></i> Guests: ${booking.guests}</p>
                                        <p><i class="fas fa-dollar-sign"></i> Total: $${booking.totalPrice}</p>
                                    </div>
                                    <div class="booking-actions">
                                        <button class="btn btn-primary" onclick="viewBookingDetails('${booking.id}')">
                                            <i class="fas fa-eye"></i> View Details
                                        </button>
                                        <button class="btn btn-secondary" onclick="cancelBooking('${booking.id}')">
                                            <i class="fas fa-times"></i> Cancel
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `).join('');
                    } else {
                        console.error('Error loading bookings:', data.message);
                    }
                } catch (error) {
                    console.error('Error loading bookings:', error);
                }
            }

            // Function to setup filter buttons
            function setupFilterButtons() {
                const filterButtons = document.querySelectorAll('.filter-btn');
                filterButtons.forEach(button => {
                    button.addEventListener('click', function() {
                        // Remove active class from all buttons
                        filterButtons.forEach(btn => btn.classList.remove('active'));
                        // Add active class to clicked button
                        this.classList.add('active');
                        // Filter bookings
                        filterBookings(this.dataset.filter);
                    });
                });
            }

            // Function to filter bookings
            function filterBookings(filter) {
                const bookings = document.querySelectorAll('.booking-card');
                const now = new Date();

                bookings.forEach(booking => {
                    const checkInDate = new Date(booking.dataset.date);
                    const status = booking.dataset.status;

                    switch(filter) {
                        case 'confirmed':
                            booking.style.display = status === 'confirmed' ? 'block' : 'none';
                            break;
                        case 'upcoming':
                            booking.style.display = checkInDate > now ? 'block' : 'none';
                            break;
                        case 'past':
                            booking.style.display = checkInDate < now ? 'block' : 'none';
                            break;
                        default:
                            booking.style.display = 'block';
                    }
                });
            }

            // Function to view booking details
            function viewBookingDetails(bookingId) {
                // Implement booking details view
                console.log('View details for booking:', bookingId);
            }

            // Function to cancel booking
            async function cancelBooking(bookingId) {
                if (confirm('Are you sure you want to cancel this booking?')) {
                    try {
                        const response = await fetch(`/api/bookings/${bookingId}/cancel`, {
                            method: 'POST'
                        });
                        const data = await response.json();

                        if (data.success) {
                            // Reload bookings after cancellation
                            loadBookings();
                        } else {
                            alert(data.message || 'Failed to cancel booking');
                        }
                    } catch (error) {
                        console.error('Error cancelling booking:', error);
                        alert('Error cancelling booking');
                    }
                }
            }
        </script>
    </body>
</html> 